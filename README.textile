h1. Factory Grabber

p. Factory grabber speeds up your tests by grabbing the nearest factory for your needs. 

p. The idea is simple: most of the time, when using factories, you don't really care about the specific attributes, you just need a database record to play with. factory_grabber will _'grab'_ a matching record from the database if available or create any extra records if required. Less inserts to the database means faster queries.

p. At the moment, only "factory_girl":http://github.com/thoughtbot/factory_girl by thoughtbot is supported. If you'd like to see more factories supported please let me know (gavin@handyrailstips.com)

h2. Example Usage

To grab 4 users named "John Smith":
<pre>@users = Grab.four_users(:first_name => "John", :last_name => "Smith")</pre>

Grab 73 users with standard factory attributes:
<pre>@users = Grab.seventy_three_users</pre>

In a controller spec:
<pre>
describe "GET /posts/1" do

  integrate_views

  before do
  	@post = Grab.one_post :title => "This is my first post"
  end
  
  def	do_get
  	get :show, :id => @post
  end
  
  it "should show the post title" do
  	do_get
  	response.should include_text(/This is my first post/)
  end
  
end
</pre>

p. At the moment, all numbers between one and ninety_nine are supported. The general syntax for Grab methods is:

<pre>Grab.[number_in_words]_[factory_name]</pre>

h2. Performance

<pre>
Here's a quick example of the possible performance gains:

Rehearsal --------------------------------------------------------------
Create 50 new factories      0.130000   0.200000   0.330000 (  6.785332)
Grab 50 separate factories   0.320000   0.020000   0.340000 (  0.332814)
Grab 50 factories at once    0.010000   0.000000   0.010000 (  0.012414)
----------------------------------------------------- total: 0.680000sec

                                 user     system      total        real
Create 50 new factories      0.100000   0.200000   0.300000 (  6.354282)
Grab 50 separate factories   0.300000   0.000000   0.300000 (  0.310373)
Grab 50 factories at once    0.020000   0.000000   0.020000 (  0.011400)
</pre>

(These results can be produced for your own environment by running the file "performance_test.rb" in factory_grabber/lib/spec/performance_test.rb)

h2. Feedback

p. This project is still an infant - if the Ruby community find it useful I plan on adding a lot more. Please send any ideas/feedback to gavin@handyrailstips.com


Free to upload, edit, share, fork etc.
"Gavin Morrice":http://gavinmorrice.com 2009<br />
"www.handyrailstips.com":http://handyrailstips.com